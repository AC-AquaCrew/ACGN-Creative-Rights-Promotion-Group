import { FETCH_ARTICLE_LIST } from '../actions/actionTypes';

const INITIAL_STATE = [];

// XXX: test data
const mockData = [
    {
        title: "測試用文章",
        content: "如懶人包所述，組織「不贊同」本次的連署提案，原因如下：\n第一、論點論證不夠完善；目前對於這個議題有利的論點多到可以寫成一篇論文，光是在 ⁠情報整理 就有非常多有力的論證可以被採用。然而目前這個連署案所提及的論點卻僅僅是一部份的面向。完整性與說服力存疑。\n第二、連署發表過於倉促；缺乏多方思辨，論點不夠全面且容易被鑽漏洞。無懈可擊的論點必須經過不斷地反駁、修正才有機會誕生。當局者迷，旁觀者清。提出連署的並非社群或平台，而是個人，缺乏多方思辨的能力。\n第三、時間尚餘；並不是說這件事不急，而是分明可以準備得更妥當再出發，卻選擇揠苗助長。\n第四、溝通無果；目前我們僅有單方面的收到這位提案者希望我們協助擴散連署的訊息，但是對於我們提出的疑問與建議尚無下文。無法與提案者溝通、協調。\n第五、撞題；PTT平台版主已表明將會在準備妥當後發起連署，並提醒其他準備連署的人不要撞題，待他們統一發表。我們傾向於與PTT、DCARD網友合作之後在共同發表連署，這有助於提出一個更為完備、具說服力的提案。然而如今這項不夠完整的提案遭到發表，未來將無法發表同樣的提案，導致更為完善的提案無法發起。\n\n綜上所述，我們判斷這個連署案過於倉促，且在沒有經過足夠的思辨與驗證便草率地發起了本次連署。組織立場上感激所有為這個議題所做出貢獻的朋友，只是如此草率的舉動容易導致未來這個議題因為論點的說服力不足、全面性不足而遭到駁回。\n「連署」並不是只要通過連署人數的門檻就沒事了，通過門檻之後，將會送交主管機關研討，於2個月內具體回應參採情形，並公布於公共意見平臺。\n換句話說，即便通過連署，如果無法說服主管機關去改善，那麼問題仍舊無法解決。無法解決之餘，情況可能還會進一步惡化，因此每一步都必須要謹慎處理。",
        imageSrc: "/p1.png"
    }, {
        title: "測試用文章",
        content: "結果：低機率成功撤案（目前該案發起人拒絕溝通）；與PTT、DCRAD網友協作後提出更加完善的連署案。\n機會成本：動員資源的使用、呼籲不支持該案所需的人資消耗。\n組織利益：提升曝光度、建立良好溝通渠道、塑造良好形象。\n風險評估：可能得罪倡議者；遭到指控「明是該議題的倡議團體卻背道而馳」、產生陰謀論之可能。\n\n首先，方針三原是組織傾向執行的方向，然而目前與發起人無法取得有效溝通，但撤案則必須由發起人親自執行。\n而透過呼籲不應現在支持通過的方式來煞車，雖然有機會使連署人數未達標準而不立案，然而執行所需耗時長達60日，且成功率不彰，同時風險不容忽視。\n基於這兩個原因，組織判斷方針三「窟礙難行，不予採用」。\n\n至於方針二與方針一就沒有可比性了，選用方針一不但可以對於組織未來發展產生幫助（提升組織曝光、塑造正面形象與貢獻），同時風險幾乎可以忽略。\n然而方針二對於組織發展沒有任何的益處，同時還有遭到指控的可能性。\n此外，兩者之結果近乎相同，僅僅差在耗時不同。\n\n因此基於組織未來發展的考量，決議採用「方針一」。",
        imageSrc: "/p2.png"
    }, {
        title: "測試用文章",
        content: "唯有重大資訊的更新（包含連署正式開始時），或涉及本計畫核心的變動，才會通知所有的倡議者。\n建議您關閉本伺服器的一般通知，但請確保您可以收到重大訊息的標註。\n備註：一般的合作連署社群參與本計畫，僅會在這裡進行一般通知，不會特別標註。\n\n目前本連署計畫的 ⁠推動起因 已經編寫完成，在此通知目前加入的倡議者們參考一下內容。\n如果有任何修改的建議，歡迎直接私訊提供建議～\n您的建議將有機會協助這項連署進行地更加順利，還請不吝於提供自己的想法！\n此外，如果您管理著某些社群，又或是認識某些社群的管理者，還請務必將這項連署的計畫告知對方，並邀請對方與我聯繫以參與這項連署計畫。\n這裡也會時不時提出一些本計畫需要協助的項目，如果您有餘力協助的話，也請務必協助我們！\n\n為方便讓我們確認目前正在積極關注這項連署的人數，如果您已經閱讀過這個頻道的任何通知，請幫忙給予一個 🤌 的表情符號，讓我們知道大家都很重視這件事情，非常感謝大家！\n\n自己的圈子自己救，革命尚未成功，同志仍須努力。\n",
        imageSrc: "/p3.png"
    }
];


export const articleList = (state = INITIAL_STATE, action) => {
    const { type, payload } = action;
    switch (type) {
        case FETCH_ARTICLE_LIST:
            console.log(payload?.data);
            return mockData;
        default:
            return state;
    }
};

